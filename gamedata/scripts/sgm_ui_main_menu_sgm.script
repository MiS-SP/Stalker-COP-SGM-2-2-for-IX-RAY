-- File:        UI_MAIN_MENU.SCRIPT
-- Description: Load Dialog for STALKER
-- Created:     28.10.2004
-- Lasd edit:	18.01.2006
-- Copyright:   2004 GSC Game World
-- Author:      Serhiy Vynnychenko (narrator@gsc-game.kiev.ua)
-- Version:     0.9
class "main_menu" (CUIScriptWnd)
function main_menu:__init()
	super()
	self.mbox_mode = 0
	self:InitControls()
	self:InitCallBacks()
	xr_s.on_main_menu_on()
end

function main_menu:__finalize()
end

function main_menu:InitControls()
	--/ SGM in
	sgm_version.show_version(ui_main_menu.main_menu)
	--/ SGM out
end

function main_menu:Show(f)
	self.shniaga:SetVisibleMagnifier(f)
end

function main_menu:InitCallBacks()
	--/ SGM in
	self:AddCallback("btn_mod_option", ui_events.BUTTON_CLICKED, self.mod_options, self)
	self:AddCallback("btn_coord_pos", ui_events.BUTTON_CLICKED, self.OnButton_coord_pos_clicked, self)
	--/ SGM out
end

function main_menu:OnKeyboard(dik, keyboard_action) --virtual function
	CUIScriptWnd.OnKeyboard(self, dik, keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if find_in_string(command_line(), "-test") then
			if dik == DIK_keys.DIK_F1 then
				self:mod_modes()
			elseif dik == DIK_keys.DIK_N then --/Отображать смарты на КПК.
				sgm_flags.bool_show_smarts = true
			elseif dik == DIK_keys.DIK_E then --/Отображать зоны в которые входит ГГ.
				sgm_flags.bool_show_restrictors = true
			elseif dik == DIK_keys.DIK_D then --/Отксерить в файл аномалии в радиусе 10 м.
				if sgm_flags.bool_show_anomalies == true then
					sgm_flags.bool_show_anomalies = false
				else
					sgm_flags.bool_show_anomalies = true
				end
			elseif dik == DIK_keys.DIK_A then
				sgm_flags.value_demo_anim_counter = sgm_flags.value_demo_anim_counter + 1
				show_hud_message(sgm_flags.value_demo_anim_counter)
			elseif dik == DIK_keys.DIK_X then
				give_info("sgm_achievements_guidebook")
			elseif dik == DIK_keys.DIK_7 then
				if sgm_flags.bool_mod_update == true then
					--sgm_flags.bool_mod_update=false
					give_quick_news("обновление мода отключено")
				else
					--sgm_flags.bool_mod_update=true
					give_quick_news("обновление мода включено")
				end
				reveal_objects_by_name("unique_treasure")
			elseif dik == DIK_keys.DIK_8 then
				db.actor:set_character_community("trader", 0, 0)
			elseif dik == DIK_keys.DIK_9 then
				give_info("esc_uncoupling_halt_searched")
			end
		end
	end
	return true
end

-------------------------------------------------------------------
--                           SGM Mod                             --
-------------------------------------------------------------------
function main_menu:screenshot_mode_on()
	level.hide_indicators_safe()
	game_hide_menu()
	give_info("screenshot_mode")
end

function main_menu:screenshot_mode_off()
	level.show_indicators()
	disable_info("screenshot_mode")
end

function main_menu:set_rich_actor()
	dialogs.relocate_money(db.actor, 1000000, "in")
	write_mod_param("actor_web_money", 1000000)
end

function main_menu:inc_actor_rank()
	xr_statistic.add_50_actor_rank()
end

function main_menu:deliver_mp3_and_bonus()
	give_object_to_actor("mp3_player")
	for k = 1, 40 do give_mp3_bonus() end
end

function main_menu:set_0_factor()
	if db.actor ~= nil then
		level.set_time_factor(DefaultTimeFactor())
	end
end

function main_menu:set_1_factor()
	if db.actor ~= nil then
		level.set_time_factor(50)
	end
end

function main_menu:set_2_factor()
	if db.actor ~= nil then
		level.set_time_factor(100)
	end
end

function main_menu:set_3_factor()
	if db.actor ~= nil then
		level.set_time_factor(500)
	end
end

function main_menu:set_4_factor()
	if db.actor ~= nil then
		level.set_time_factor(1000)
	end
end

function main_menu:set_5_factor()
	if db.actor ~= nil then
		level.set_time_factor(5000)
	end
end

function main_menu:set_remote_marker()
	if sgm_flags.bool_remote_marker == false then
		local rm_id = create("remote_marker", db.actor:position().x, db.actor:position().y, db.actor:position().z,
			db.actor:level_vertex_id(), db.actor:game_vertex_id(), sgm_flags.spot_toolkit_place, "точка отсчёта")
		sgm_flags.value_remote_marker = rm_id.id
		sgm_flags.bool_remote_marker = true
	elseif sgm_flags.bool_remote_marker == true then
		local marker_obj = level.object_by_id(sgm_flags.value_remote_marker)
		debug_to_file("remote_points.txt",
			marker_obj:position().x ..
			"," ..
			marker_obj:position().y ..
			"," .. marker_obj:position().z .. "," .. marker_obj:level_vertex_id() .. "," .. marker_obj:game_vertex_id())
		sgm_flags.bool_remote_marker = false
		remove_object_by_id(sgm_flags.value_remote_marker)
		sgm_flags.value_remote_marker = 0
	end
end

function main_menu:OnButton_coord_pos_clicked()
	text = "Позиция:\\nX= " ..
	db.actor:position().x ..
	"\\nY= " ..
	db.actor:position().y ..
	"\\nZ= " ..
	db.actor:position().z ..
	"\\nlevel_vertex= " ..
	db.actor:level_vertex_id() ..
	"\\ngame_vertex_id= " .. db.actor:game_vertex_id() .. "\\ndirection= " .. db.actor:direction():getH()
	news_manager.send_tip(db.actor, text, 0, mutant_hunter, 10000, nil, "Координата")
	fill_log(db.actor:position().x ..
	"," ..
	db.actor:position().y .. "," ..
	db.actor:position().z .. "," .. db.actor:level_vertex_id() .. "," .. db.actor:game_vertex_id())
	--/debug_to_file("points.txt",db.actor:level_vertex_id()..","..db.actor:game_vertex_id())
	debug_to_file("points.txt",
		db.actor:position().x ..
		"," ..
		db.actor:position().y ..
		"," ..
		db.actor:position().z ..
		"," ..
		db.actor:level_vertex_id() ..
		"," ..
		db.actor:game_vertex_id() ..
		"|" .. db.actor:direction().x .. "," .. db.actor:direction().y .. "," .. db.actor:direction().z)
end

function main_menu:mod_modes()
	if self.mod_modes_dlg == nil then
		self.mod_modes_dlg = ui_mod_modes.mod_modes()
		self.mod_modes_dlg.owner = self
	end
	self.mod_modes_dlg:ShowDialog(true)
	self:HideDialog()
	self:Show(false)
end

function main_menu:mod_options()
	if self.mod_dlg == nil then
		self.mod_dlg = ui_mod_options.mod_options()
		self.mod_dlg.owner = self
	end
	self.mod_dlg:ShowDialog(true)
	self:HideDialog()
	self:Show(false)
end
