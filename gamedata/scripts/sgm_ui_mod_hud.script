---==================================================================================================---
--------------------------------------------------------------------------------------------------------
--------------------------------------(HUD ÓÔˆËË —√Ã‡)--------------------------------------------------
--------------------------------------------------------------------------------------------------------
---==================================================================================================---
local options_names={[1]="disable_hud_wpn",[2]="disable_shock_hits",[3]="disable_actor_vertigo",[4]="activate_shock_motion",[5]="show_rank_counter",[6]="disable_hit_marks",[7]="activate_carrying_hud",[8]="activate_carrying_breathing",[9]="disable_statistic_event"}
local show_descr_box=true
class "mod_hud" (CUIScriptWnd)
function mod_hud:__init(owner) super()
   self.owner=owner
   self:InitControls()
   self:InitCallBacks()
end
function mod_hud:__finalize()
end
function mod_hud:InitControls()
   self:SetWndRect(Frect():set(0,0,1024,768))
   local xml = CScriptXmlInit()
   xml:ParseFile("ui_mod_options_hud.xml")
   xml:InitStatic("background",self)
   self.hud_form = xml:InitStatic("hud_form",self)
   self.options_field = xml:InitStatic("hud_form:options_field",self.hud_form)
   xml:InitStatic("hud_form:options_field:text_disable_hud_wpn",self.options_field)
   xml:InitStatic("hud_form:title",self.hud_form)
   self.apply_box=CUIMessageBoxEx()
   self:Register(self.apply_box,"apply_box")
   self.descr_box=CUIMessageBoxEx()
   self:Register(self.descr_box,"descr_box")
   self:start_button(xml,"btn_back")
   self:start_button(xml,"btn_apply")
   for i=1,get_table_lines(options_names) do
      self:register_check_option(xml,options_names[i])
      if show_descr_box then
         self:register_descr_box(xml,"descr_"..options_names[i])
      end
   end
   sgm_version.show_version(self)
end
function mod_hud:InitCallBacks()
   self:AddCallback("btn_back",ui_events.BUTTON_CLICKED,self.press_back,self)
   self:AddCallback("btn_apply",ui_events.BUTTON_CLICKED,self.press_apply,self)
   self:AddCallback("apply_box",ui_events.MESSAGE_BOX_YES_CLICKED,self.apply_box_ok,self)
   self:AddCallback("apply_box",ui_events.MESSAGE_BOX_OK_CLICKED,self.apply_box_ok,self)
   self:AddCallback("descr_box",ui_events.MESSAGE_BOX_YES_CLICKED,self.descr_box_ok,self)
   self:AddCallback("descr_box",ui_events.MESSAGE_BOX_OK_CLICKED,self.descr_box_ok,self)
   for i=1,get_table_lines(options_names) do
      self:AddCallback("descr_"..options_names[i],ui_events.BUTTON_CLICKED,self["descr_"..options_names[i]],self)
   end
end
function mod_hud:descr_disable_statistic_event()
   self.descr_box:InitMessageBox("mb_descr_disable_statistic_event")
   self.descr_box:ShowDialog(true)
end
function mod_hud:descr_activate_carrying_breathing()
   self.descr_box:InitMessageBox("mb_descr_activate_carrying_breathing")
   self.descr_box:ShowDialog(true)
end
function mod_hud:descr_activate_carrying_hud()
   self.descr_box:InitMessageBox("mb_descr_activate_carrying_hud")
   self.descr_box:ShowDialog(true)
end
function mod_hud:descr_disable_hit_marks()
   self.descr_box:InitMessageBox("mb_descr_disable_hit_marks")
   self.descr_box:ShowDialog(true)
end
function mod_hud:descr_disable_hud_wpn()
   self.descr_box:InitMessageBox("mb_descr_disable_hud_wpn")
   self.descr_box:ShowDialog(true)
end
function mod_hud:descr_disable_shock_hits()
   self.descr_box:InitMessageBox("mb_descr_disable_shock_hits")
   self.descr_box:ShowDialog(true)
end
function mod_hud:descr_disable_actor_vertigo()
   self.descr_box:InitMessageBox("mb_descr_disable_actor_vertigo")
   self.descr_box:ShowDialog(true)
end
function mod_hud:descr_activate_shock_motion()
   self.descr_box:InitMessageBox("mb_descr_activate_shock_motion")
   self.descr_box:ShowDialog(true)
end
function mod_hud:descr_show_rank_counter()
   self.descr_box:InitMessageBox("mb_descr_show_rank_counter")
   self.descr_box:ShowDialog(true)
end
function mod_hud:apply_box_ok()
   self.apply_box:ShowDialog(false)
   self.apply_box:HideDialog()
end
function mod_hud:descr_box_ok()
   self.descr_box:ShowDialog(false)
   self.descr_box:HideDialog()
end
function mod_hud:press_apply()
   for i=1,get_table_lines(options_names) do
      self:apply_option(options_names[i])
   end
   self:press_back()
   self.apply_box:InitMessageBox("mb_mod_options_hud_apply")
   self.apply_box:ShowDialog(true)
end
function mod_hud:press_back()
   self.owner:ShowDialog(true)
   self:HideDialog()
   self.owner:Show(true)
end
function mod_hud:OnKeyboard(dik,keyboard_action)
   CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
   if keyboard_action==ui_events.WINDOW_KEY_PRESSED then
      if dik==DIK_keys.DIK_ESCAPE then
         self:press_back()
      end
   end
   return true
end
function mod_hud:start_button(xml,button_name)
   self["get_"..button_name]=xml:Init3tButton("hud_form:"..button_name,self.hud_form)
   self:Register(self["get_"..button_name],button_name)
end
function mod_hud:apply_option(opt_name)
   sgm_functions.info_give_on_boolean(self["btn_"..opt_name]:GetCheck(),"opt_"..opt_name)
end
function mod_hud:register_descr_box(xml,box_name)
   self:Register(xml:Init3tButton("hud_form:options_field:"..box_name,self.options_field),box_name)
end
function mod_hud:register_check_option(xml,opt_name)
   local btn
   btn = xml:InitCheck("hud_form:options_field:btn_"..opt_name,self.options_field)
   self:Register(btn,"btn_"..opt_name)
   self["btn_"..opt_name]=btn
   btn:SetCheck(sgm_functions.info_get_boolean("opt_"..opt_name))
end



---------------------------------//Copyright GeJorge//-----------------------------------------------



