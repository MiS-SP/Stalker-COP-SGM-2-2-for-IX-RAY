xr_combat_ignore.is_enemy = function(obj, enemy, st, not_check_sim)
	if not obj:alive() then
		return false
	end
        --/ SGM in
	if sgm_callbacks.on_check_npc_enemy(obj,enemy)==false then return false end
        --/ SGM out
	if obj:critically_wounded() then
		return true
	end
	if st.enabled == false then
		return true
	end
	local overrides = st.overrides
	local obj_id = obj:id()
	local storage = db.storage[obj_id]
	if storage == nil then
		return true
	end
	storage.enemy_id = enemy:id()

	--' Отсеиваем по зоне
	local active_sector = storage.active_sector
	if active_sector ~= nil then
		if sr_danger.check_danger_position(enemy:position(), active_sector) == false then
--			obj:enable_memory_object( enemy, false )
			return false
		end
	end

	-- Проверка на зоны комбат игнора возле баз:
		-- игнорировать если:
		-- враг не актер.
		-- сталкер находится в зоне.
		-- смарт в котором находится сталкер не в состоянии тревоги.
	if enemy:id() ~= db.actor:id() then
		for k,v in pairs (smarts_by_no_assault_zones) do
			local zone = db.zone_by_name[k]
			if zone and (utils.npc_in_zone(obj, zone) or utils.npc_in_zone(enemy, zone)) then
				local smart = sim_board.get_sim_board():get_smart_by_name(v)
				if smart and smart.base_on_actor_control ~= nil and smart.base_on_actor_control.status ~= smart_terrain_control.ALARM then
					return false
				end
			end
		end
	end

	local se_enemy = alife():object(enemy:id())
	if se_enemy ~= nil and se_enemy.m_smart_terrain_id ~= nil and se_enemy.m_smart_terrain_id ~= 65535 then
		local enemy_smart = alife():object(se_enemy.m_smart_terrain_id)
		local smart_name = enemy_smart:name()
		if ignored_smart[smart_name] == true then
--			obj:enable_memory_object( enemy, false )
			return false
		end
	end
	--printf("checking combat_ignore for stalker[%s] enemy name [%s] in section[%s]",obj:name(), enemy:name(),storage.active_section)
	--' Если есть оверрайды, то работаем по ним.
	if overrides and
		 overrides.combat_ignore
	then
		local ret_value = xr_logic.pick_section_from_condlist( enemy, obj, overrides.combat_ignore.condlist )
		if ret_value == "true" then
			--printf("pl:Disabling_memory_object[1] for stalker[%s] enemy name [%s] in section[%s]",obj:name(), enemy:name(),storage.active_section)
--			obj:enable_memory_object( enemy, false )
			return false
		end
		return true
	end
	return true
end