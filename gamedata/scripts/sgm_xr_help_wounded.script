xr_help_wounded.evaluator_wounded_exist.evaluate = function(self)
	local npc = self.object

	if not npc:alive() then
		return false
	end

	if npc:best_enemy() ~= nil then
		return false
	end

	if npc:character_community() == "zombied" then
		return false
	end
	--/ SGM in
	if sgm_functions.ReadWoundedDetection(npc:section()) == false then
		return false
	end
	--/ SGM out
	if self.a.help_wounded_enabled == false then
		return false
	end

	if xr_wounded.is_wounded(npc) then
		return false
	end
	--/ SGM in
	if npc:section() == "actor_visual_stalker" or npc:section() == "actor_visual_stalker2" or npc:section() == "actor_visual_stalker3" then
		return false
	end
	--/ SGM out

	local nearest_dist = 900 -- Будет выбирать только трупы, ближе чем эта дистанция (проверяется по квадрату расстояния)
	local nearest_vertex = nil
	local nearest_position = nil
	local selected_id = nil

	for v in npc:memory_visible_objects() do
		local vo = v:object()
		local id = vo:id()
		local npc_id = npc:id()

		if npc:see(vo) and xr_wounded.is_wounded(vo) and (db.storage[id].wounded_already_selected == nil or db.storage[id].wounded_already_selected == npc_id) and vo:alive() then
			if db.storage[id].wounded.not_for_help ~= true then
				local npc_position = npc:position()
				local vo_position = vo:position()

				if npc_position:distance_to_sqr(vo_position) < nearest_dist then
					local vertex = level.vertex_id(vo_position)
					if npc:accessible(vertex) then
						nearest_dist = npc_position:distance_to_sqr(vo_position)
						nearest_vertex = vertex
						nearest_position = vo_position
						selected_id = id
					end
				end
			end
		end
	end

	if nearest_vertex ~= nil then
		self.a.vertex_id = nearest_vertex
		self.a.vertex_position = nearest_position

		if self.a.selected_id ~= nil and self.a.selected_id ~= selected_id and db.storage[self.a.selected_id] ~= nil then
			db.storage[self.a.selected_id].wounded_already_selected = nil
		end

		self.a.selected_id = selected_id
		db.storage[self.a.selected_id].wounded_already_selected = npc:id()

		return true
	end

	return false
end
